---
- name: clean-install
  become: yes
  file:
    path: "{{ project_root }}"
    state: absent
  when: fresh_install|bool

- name: Check .env file
  stat: 
    path: "{{ project_root }}/.env"
  register: env_file
  changed_when: not env_file.stat.exists
  notify:
    - ensure compose down
    - init templates

- name: Check compose file
  stat: 
    path: "{{ project_root }}/docker-compose.yml"
  register: compose_file
  changed_when: not compose_file.stat.exists
  notify:
    - ensure compose down
    - init templates

- name: Ensure directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    state: directory
  loop:
    - { path: "{{ project_root }}", owner: "{{ server_user }}" }

- name: Query releases from github
  uri:                                                               
    url: https://api.github.com/repos/jitsi/docker-jitsi-meet/releases/latest
    return_content: true                                             
  register: github_latest_release   

- name: Registering release tag
  set_fact:
    jitsi_docker_release: "{{ github_latest_release['json']['tag_name'] }}"
  when: jitsi_docker_release == None

- name: Registering host binding
  set_fact:
    config_host_binding: ''
  when: config_enable_letsencrypt|bool

- name: Registering auth method
  set_fact:
    jitsi_config_auth_type: "{% if (jitsi_password!=None) and (jitsi_config_app_secret==None)%}internal{% elif (jitsi_password==None) and (jitsi_config_app_secret!=None) %}jwt{% endif %}"
  when: jitsi_password != None or jitsi_config_app_secret!=None

- name: Ensure source files from github
  get_url:
    url: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  loop:
    - { file: "https://raw.githubusercontent.com/jitsi/docker-jitsi-meet/{{ jitsi_docker_release }}/docker-compose.yml", destination: "{{ project_root }}/docker-compose.yml.example", owner: "{{ server_user }}", mode: "0644" }
    - { file: "https://raw.githubusercontent.com/jitsi/docker-jitsi-meet/{{ jitsi_docker_release }}/env.example", destination: "{{ project_root }}/env.example", owner: "{{ server_user }}", mode: "0644" }
    - { file: "https://raw.githubusercontent.com/jitsi/docker-jitsi-meet/{{ jitsi_docker_release }}/etherpad.yml", destination: "{{ project_root }}/docker-compose.override.yml", owner: "{{ server_user }}", mode: "0644" }
  notify:
    - ensure compose down
    - init templates

- name: Ensure nginx template
  template:
    src: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  loop:
    - { file: "nginx.j2", destination: "/etc/nginx/{{ nginx_domain_name }}.d/jitsi.conf", owner: "root", mode: "0644" }
  become: yes
  when: reverse_proxy_setup|bool
  notify:
    - reload nginx

- name: Triggering handlers
  assert: { that: true, quiet: true }
  changed_when: true
  notify:
    - ensure env configs
    - ensure compose configs

- name: Compose startup state
  assert: { that: true, quiet: true }
  changed_when: true
  notify:
    - compose up
  when: start_compose|bool

- name: Flush handlers
  meta: flush_handlers

- import_tasks: custom.yml
  when: config_enable_custom_configs|bool